<div class="row">
  <div class="col-sm-12 col-md-12 main">
    <h1 class="page-header">Social Media Accounts</h1>
    <div class="row placeholders">
      <div class="col-xs-12 col-sm-3 col-md-2 verticalTabsWrap">
        <div class="list-group verticalTabs">
          <%= link_to admin_outlets_path, {class: "list-group-item verticalTabs-item #{"active" if params[:service].nil? }"} do %>
            All         
          <%end%>
          <% @services.each do |key, value| %>
            <%= link_to admin_outlets_path(service: key), {class: "list-group-item verticalTabs-item #{"active" if key==params[:service]}"} do %>
              <%= Service.find_by_shortname(key).longname %>
              <span class="count pull-right"><%= value %></span>
            <% end %>
          <% end %>
        </div>
      </div>

      <div class="col-xs-12 col-sm-9 col-md-10 tbldisplay">
        <div style="height:40px;">
          <%= form_tag admin_outlets_path, method: :get, class: 'per-page-form' do %>
            <label>Items per page: </label>
            <%= select_tag :per_page, options_for_select([10, 25, 50, 100], selected: cookies[:per_page_count_social_media_accounts] || 25) %>
            <%= submit_tag "Update", class: 'per-page-submit' %>    
            <% if params[:service] %>
              <%= hidden_field_tag :hidden_service_value, params[:service] %>            
            <% end %>            
          <% end %>            
          <%= form_tag admin_outlets_path, class: 'admin-search-form', method: "get" do %>
            <%= text_field_tag :tag_tokens, nil, value: ""  %>     
            <div class="admin-search-group2">     
              <%= label_tag(:q, "Search for:") %>            
              <%= text_field_tag(:q, @search_terms) %>
              <%= submit_tag "Search", class: 'admin-search-submit' %>
            </div>
          <% end %>                    
        </div>
        <div class="paginated-results">   
          <div>                           
            <%= paginate @outlets %>        
            <%= page_entries_info @outlets %>
            <text>
              <%= link_to "Add an Account", new_admin_outlet_path, :class => "btn btn-default" %>
              Download: <%= link_to "CSV", admin_outlets_path(format: "csv", params: params.except(:action, :controller, :page, :page_size)) %> 
            </text>
          </div>
        <table class="table table-striped">
          <thead>
            <tr>
              <th>Agency</th>
              <th><%= sortable "service_url", "Service" %></th>
              <th><%= sortable "organization", "Social Media Account " %></th>
              <th> Tags</th>
              <th><%= sortable "status", "Status" %></th>
              <th><%= sortable "updated_at", "Updated at" %></th>
              <th class = "lastlinks">Actions</th>
            </tr>
          </thead>
          <tbody>
            <% @outlets.each do |outlet| %>

            <tr class = "tablerow">
              <td class = "table_data"><%= outlet.agencies.map(&:name).join(', ').upcase %></td>
              <td class = "table_data"><%= outlet.service %></td>
              <td class = "table_data"><%= link_to outlet_organization_name(outlet), outlet.service_url, {target: "_blank"} %></td>
              <td class = "table_data">
                <% outlet.official_tags.each do |tag| %>
                  <%= link_to tag.tag_text, "javascript:add_tag(#{tag.id},\"#{tag.tag_type.humanize}: #{tag.tag_text}\")" %>
                <% end %>
              </td>
              <td class = "table_data"><%= outlet.status.titleize %></td>
              <td class = "table_data"><%= outlet.updated_at.strftime("%B %e, %Y %H:%M") %></td>

              <td class = "table_data lastlinks">
                <%= link_to admin_outlet_path(outlet) do %> <i class = "glyphicon glyphicon-info-sign"></i> <% end %>
                <%= link_to edit_admin_outlet_path(outlet) do %> <i class = "glyphicon glyphicon-pencil"></i> <% end %>
              </td>   
            </tr>
            <% end %>
          </tbody>
        </table>
        <div>
          <text>
            <%= link_to "Add an Account", new_admin_outlet_path, :class => "btn btn-default" %>
            Download: <%= link_to "CSV", admin_outlets_path(format: "csv", params: params.except(:action, :controller, :page, :page_size)) %> 
          </text>
          <%= paginate @outlets %>
        </div>
        </div>
      </div>
    </div>
  </div>
</div>


<% content_for :additional_javascript do %>
  <script>
    var tags = [];
    $("#tag_tokens").tokenInput("/admin/official_tags/tokeninput.json", {
      crossDomain: false,
      prePopulate: tags
    });

    // Populate with tags selected before the page load.
    <% @tags.each_with_index do |t, i| %> 
        add_tag("<%=@tagIDs[i]%>", "<%=t.tag_type.humanize + ': ' + t.tag_text%>")       
    <% end %>

    function init() {
      // Adjust token-input-list to fit layout for this page.
      document.getElementsByClassName('token-input-list')[0].style.width='250%';
      document.getElementsByClassName('token-input-list')[0].style.lineHeight='22px';      
      document.getElementsByClassName('token-input-list')[0].style.minHeight='10px';  
      document.getElementsByClassName('token-input-list')[0].style.position='relative';         
      document.getElementsByClassName('token-input-list')[0].style.left='-555px';    
      document.getElementsByClassName('token-input-list')[0].style.top='-35px';         

      // The code below updates content for the token-input-input-token::before pseudo-element. 
      $('head').append(document.createElement('style'));
      var tagTokenStyleSheet = document.styleSheets[document.styleSheets.length-1];
      var tagTokenRule = "ul.token-input-list .token-input-input-token::before { content: '\\f002  Add Tags Here'; }";
      if (tagTokenStyleSheet.insertRule) { tagTokenStyleSheet.insertRule(tagTokenRule, tagTokenStyleSheet.cssRules.length); }
    };

    function add_tag(id,name){
      $("#tag_tokens").tokenInput("add", {id: id, name: name});
    }    


    window.onload = init;

  </script>
<% end %>